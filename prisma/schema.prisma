generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// CUID = Collision-resistent Unique IDentifier
model User {
  id             Int     @id @default(autoincrement())
  userName       String  @unique
  email          String  @unique
  phoneno        String? @unique
  password       String
  profilePicture String?
  publicId       String?

  createdAt      DateTime     @default(now())
  location       UserLocation @relation(fields: [userLocationId], references: [id])
  reviews        Review[]
  bookmarks      Bookmark[]
  userLocationId Int
}

model UserLocation {
  id   Int    @id @default(autoincrement())
  lat  Float?
  log  Float?
  User User[]
}

model Station {
  id             Int        @id @default(autoincrement())
  stationName    String
  stationAddress String
  latitude       Float
  longitude      Float
  category       String
  rating         Float?
  contact        String?
  reviews        Review[]
  bookmarks      Bookmark[]
}

// enum Category {
//   EV
//   FUEL
//   CNG
// }

model Review {
  id        Int      @id @default(autoincrement())
  review    String
  Station   Station? @relation(fields: [stationId], references: [id])
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?
  stationId Int?
}

model Bookmark {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  station   Station @relation(fields: [stationId], references: [id], onDelete: Cascade)
  stationId Int
}
