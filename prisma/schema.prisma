generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// CUID = Collision-resistent Unique IDentifier
model User {
  id             Int     @id @default(autoincrement())
  userName       String
  email          String  @unique
  phoneno        String? @unique
  password       String
  profilePicture String?
  publicId       String?

  createdAt DateTime @default(now())

  reviews   Review[]
  bookmarks Bookmark[]
}

model Station {
  id               Int        @id @default(autoincrement())
  stationName      String
  stationAddress   String
  latitude         Float
  longitude        Float
  category         String
  rating           Float?
  state            String?
  city             String?
  type             String
  country          String?
  stationPhone     String?
  cardsaccepted    String?
  EVConnectorTypes String?
  opendate         String?
  zipcode          String?
  website          String?
  openTime         String?
  contact          String?
  reviews          Review[]
  bookmarks        Bookmark[]
}

// enum Category {
//   EV
//   FUEL
//   CNG
// }

model Review {
  id        Int      @id @default(autoincrement())
  review    String
  Station   Station? @relation(fields: [stationId], references: [id])
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?
  stationId Int?

  createdAt DateTime @default(now())
}

model Bookmark {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  station   Station @relation(fields: [stationId], references: [id], onDelete: Cascade)
  stationId Int
}
